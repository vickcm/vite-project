<template>
  <div>
    <h2>Usuarios:</h2>
    <p>{{ userFrom }}</p>
    <p>{{ userTo }}</p>

    <h2>Mensajes:</h2>
    <ul>
      <li v-for="message in messages" :key="message.id">
        <span>{{ message.user }}</span>: {{ message.message }}
      </li>
    </ul>

    <form @submit.prevent="sendMessage">
      <input type="text" v-model="newMessage" />
      <button type="submit">Enviar</button>
    </form>
  </div>
</template>

<script>
import { sendPrivateMessages, getChatMessages, subscribeToPrivateChat } from '../services/private-chats';

export default {
  props: {
    userFrom: {
      type: String,
      required: true,
    },
    userTo: {
      type: String,
      required: true,
    },
  },
  data() {
    return {
      messages: [],
      newMessage: '',
    };
  },
  methods: {
    async fetchMessages() {
      try {
        const chatId = `${this.userFrom}_${this.userTo}`;
        const chatMessages = await getChatMessages(chatId);
        this.messages = chatMessages;
      } catch (error) {
        console.log('Error al obtener los mensajes:', error);
      }
    },
    async sendMessage() {
      try {
        const chatId = `${this.userFrom}_${this.userTo}`;
        await sendPrivateMessages(this.userFrom, this.userTo, this.newMessage);
        this.newMessage = '';
      } catch (error) {
        console.log('Error al enviar el mensaje:', error);
      }
    },
    async subscribeToChatMessages() {
      const chatId = `${this.userFrom}_${this.userTo}`;
      subscribeToPrivateChat(this.userFrom, this.userTo, (messages) => {
        this.messages = messages;
      });
    },
  },
  created() {
    this.fetchMessages();
    this.subscribeToChatMessages();
  },
};
</script>
